<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="DbHelper.ttinclude"  #>
<#@ include file="Manager.ttinclude"#>
<# var manager = Manager.Create(Host, GenerationEnvironment);
	foreach(string tableName in config.TableNames.Split(',')){
	   #>
<# manager.StartNewFile(tableName+".cs"); #>
using System;
using System.Collections.Generic;
using System.ComponentModel;

namespace LComplete.Framework.Site.Domain.Model
{	

	public partial class <#=tableName#>
    {
		<# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, tableName)){#>

		/// <summary>
		/// <#=column.Remark#>
		/// </summary>		
        [DisplayName("<#=column.Remark#>")]
		public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
		<#}#> 
      
    }
}

<# manager.EndBlock(); #>
<#}#>

<# manager.Process(true); #>


<#+
	public class config
	{
		public static readonly string ConnectionString=@"Data Source=.\DB;Initial Catalog=TestDB;Integrated Security=True";
		public static readonly string DbDatabase="[TestDB]";
		public static readonly string TableNames="UserInfo";
	}
#>
